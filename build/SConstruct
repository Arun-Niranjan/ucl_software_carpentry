import os

reveal_slides=Builder(action='pandoc -t revealjs -s -V theme=beige'+
	' --css=beige.css'+
	' --css=slidetheme.css'+
	' --mathjax '+
	' --default-image-extension=png'
	' -V revealjs-url=http://lab.hakim.se/reveal-js/'+
	' $SOURCES -o $TARGET')

env=Environment()
env.Append(BUILDERS={'PandocSlides':reveal_slides})


generate_WSD_figures=False
web_sequence_builder=Builder(action='python -m websequence --style magazine --format=png --in $SOURCE --out $TARGET',
	    suffix='.png',
	    src_suffix='.wsd')

graphviz_dot_builder=Builder(action="dot -Tpng $SOURCE -o $TARGET", suffix=".png", src_suffix=".dot")
graphviz_neato_builder=Builder(action="neato -Tpng $SOURCE -o $TARGET", suffix=".png", src_suffix=".dot")
env.Append(BUILDERS={'WSD':web_sequence_builder})
env.Append(BUILDERS={'Dot':graphviz_dot_builder})
env.Append(BUILDERS={'Neato':graphviz_neato_builder})

git_content=Glob("../git/*.md")
setup_content=Glob("../installation/*.md")
intro_content=Glob("../intro/*.md")
git_slides=env.PandocSlides("reveal/git.html",git_content)

setup_slides=env.PandocSlides("reveal/setup.html",setup_content)

intro_slides=env.PandocSlides("reveal/intro.html",intro_content)

def assetpath(node):
	return os.path.join('reveal','assets',
		os.path.basename(os.path.splitext(env.GetBuildPath(node))[0])+'.png')

if generate_WSD_figures:
	for source in Glob('../git/figures/*.wsd'):
	    png=env.WSD(assetpath(source),source)
	    Depends(git_slides,png)
for source in Glob('../git/figures/*.dot'):
    png=env.Dot(assetpath(source),source)
    Depends(git_slides,png)
for source in Glob('../git/figures/*.nto'):
	png=env.Neato(assetpath(source),source)
	Depends(git_slides,png)
